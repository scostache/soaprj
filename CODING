Coding style:

1. General stuff

- Use 8-space tabs for indentation.

- Place braces in the Kernighan and Ritchie style: put the opening brace last on the line, and put the
closing brace first. One exception is made for functions: they  have the opening brace at the beginning
of the next line.

- Comments: Use only "/*...*/" for commenting.
The preferred style for long (multi-line) comments is:
/*
* Bla bla bla. This it should be a multi-line comment.
* Another description goes here.
*/

- Functions should be declared on a single line, like this:
void foo(int arg1, int arg2)
{
...
}
When defining a function, parameter order is: inputs, then outputs.


2. Naming

In our module, structures are defined with typedef, and they have the suffix "_t", in general. 
Macros and enumerations are uppercase.
Function and variable names are lowercase, with underscores to separate words.

Classes: first character in a name is upper case; no underbars in the class name. If you need multiple words than use upper case letters as word separators.

** Function naming

All the main functions from the HybFS core, used for interfacing with FUSE, should be named hybfs_* .
All the functions that provide access to the BDB (Berkely Database), should be named db_* . Some 
exceptions are possible, when access is needed from functions that are used for other purposes.
All the functions that are used for operations on queries (or virtual directories) should be named vdir_*.

For internal functions within a single source file, a short simple name is acceptable,since they are
not globally visible and thus you do not need the module/submodule prefix.

3. Function return values

This is important to remember:
 - All the functions from the DbBackend class should return -1 in case of error. This is a temporary solution until I'll write a proper
error converter ( the errors I get from the DB are somewhat ... special ? ).

